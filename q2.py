# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.

def fibUnderN(n):
    """ This function returns a list of fibonacci numbers under n
    --param
    n : integer
    --return
    list : all fibs under n
    """
    fibs = [0,1]
    ctr = 2

    while (fibs[-1] + fibs[-2]) < n:
        temp = fibs[ctr-1] + fibs[ctr-2]
        if temp < n:
            fibs.append(temp)
        ctr += 1


    return fibs.copy()
# end of fibUnderN

evenFibs = [x for x in fibUnderN(4000000) if x % 2 == 0]
print(sum(evenFibs))
